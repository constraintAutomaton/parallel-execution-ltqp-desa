@Misc{Hartig2016,
  author        = {Olaf Hartig and M. Tamer Özsu},
  title         = {Walking without a Map: Optimizing Response Times of Traversal-Based Linked Data Queries (Extended Version)},
  year          = {2016},
  archiveprefix = {arXiv},
  comment-id357 = {Je pense que cet article demolie nos plan initiaux, car il montre que l'architecture proposer n'est pas nouvelle peut-etre distribuer les calculs ferais mieux},
  eprint        = {1607.01046},
  file          = {:papers/Walking without a Map  Optimizing Response Times of Traversal-Based Linked Data Queries.pdf:PDF},
  groups        = {Link Traversal Query Processing, LTQP},
  primaryclass  = {cs.DB},
  ranking       = {rank5},
  readstatus    = {skimmed},
}

@InProceedings{taelman_iswc_resources_comunica_2018,
  author        = {Taelman, Ruben and Van Herwegen, Joachim and Vander Sande, Miel and Verborgh, Ruben},
  booktitle     = {Proceedings of the 17th International Semantic Web Conference},
  title         = {Comunica: a Modular SPARQL Query Engine for the Web},
  year          = {2018},
  month         = oct,
  comment-id357 = {Ne vas pas vrmt etre necessaire par contre pourra etre citer pour montrer l'engin que nous utiliserons},
  file          = {:papers/Comunica a Modular SPARQL Query Engine for the Web.pdf:PDF},
  groups        = {LTQP},
  ranking       = {rank1},
  readstatus    = {skimmed},
  url           = {https://comunica.github.io/Article-ISWC2018-Resource/},
}

@InProceedings{Hartig2013,
  author        = {Hartig, Olaf},
  booktitle     = {Proceedings of the 2013 ACM SIGMOD International Conference on Management of Data},
  title         = {SQUIN: A Traversal Based Query Execution System for the Web of Linked Data},
  year          = {2013},
  address       = {New York, NY, USA},
  pages         = {1081–1084},
  publisher     = {Association for Computing Machinery},
  series        = {SIGMOD '13},
  abstract      = {The World Wide Web (WWW) currently evolves into a Web of Linked Data where content providers publish and link their data as they have done with hypertext for the last 20 years. We understand this emerging dataspace as a huge, distributed database which is -at best- partially known to query execution systems. To tap the full potential of the Web, such a system must be able to answer a query using data from initially unknown data sources. For this purpose, traditional query execution paradigms are unsuitable because those assume a fixed set of potentially relevant data sources beforehand.We demonstrate the query execution system SQUIN which implements a novel query execution approach. The main idea is to integrate the traversal of data links into the result construction process. This approach allows the execution engine to discover potentially relevant data during the query execution.In our demonstration, attendees can query the Web of Linked Data using SQUIN and, thus, learn about the new query execution approach. Furthermore, attendees can experience the suitability of the approach for Web applications by using a simple, Linked Data based mash-up implemented on top of SQUIN.},
  comment-id357 = {Explique bien l'approche des iterateurs de plus, le fondement theorique de LTQP est bien expliquer definitivement une bonne reference},
  doi           = {10.1145/2463676.2465231},
  file          = {:papers/A Traversal Based Query Execution System.pdf:PDF},
  groups        = {Link Traversal Query Processing, LTQP},
  isbn          = {9781450320375},
  keywords      = {web of data, link traversal based query execution, linked data},
  location      = {New York, New York, USA},
  numpages      = {4},
  ranking       = {rank5},
  readstatus    = {read},
  url           = {https://doi.org/10.1145/2463676.2465231},
}

@InProceedings{Hartig,
  author        = {Hartig, Olaf and Freytag, Johann-Christoph},
  booktitle     = {Conference on Hypertext and Social Media},
  title         = {Foundations of Traversal Based Query Execution over Linked Data},
  publisher     = {ACM},
  series        = {HT '12},
  abstract      = {Query execution over the Web of Linked Data has attracted much attention recently. A particularly interesting approach is link traversal based query execution which proposes to integrate the traversal of data links into the creation of query results. Hence -in contrast to traditional query execution paradigms- this does not assume a fixed set of relevant data sources beforehand; instead, the traversal process discovers data and data sources on the fly and, thus, enables applications to tap the full potential of the Web.While several authors have studied possibilities to implement the idea of link traversal based query execution and to optimize query execution in this context, no work exists that discusses theoretical foundations of the approach in general. Our paper fills this gap.We introduce a well-defined semantics for queries that may be executed using a link traversal based approach. Based on this semantics we formally analyze properties of such queries. In particular, we study the computability of queries as well as the implications of querying a potentially infinite Web of Linked Data. Our results show that query computation in general is not guaranteed to terminate and that for any given query it is undecidable whether the execution terminates. Furthermore, we define an abstract execution model that captures the integration of link traversal into the query execution process. Based on this model we prove the soundness and completeness of link traversal based query execution and analyze an existing implementation approach.},
  address.bak   = {New York, NY, USA},
  comment-id357 = {pas vraiment utile pour ce travail},
  doi.bak       = {10.1145/2309996.2310005},
  file          = {:papers/Foundations of Traversal Based Query Execution.pdf:PDF},
  groups        = {Link traversal, Link Traversal Query Processing, LTQP},
  isbn          = {9781450313353},
  keywords      = {link traversal based query execution, computability, query semantics, web of data, linked data},
  location.bak  = {Milwaukee, Wisconsin, USA},
  numpages.bak  = {10},
  pages.bak     = {43–52},
  ranking       = {rank1},
  readstatus    = {skimmed},
  url.bak       = {https://doi.bak.org/10.1145/2309996.2310005},
  year.bak      = {2012},
}

@InProceedings{Hartig2009,
  author    = {Hartig, Olaf and Bizer, Christian and Freytag, Johann-Christoph},
  booktitle = {Proceedings of the 8th International Semantic Web Conference},
  title     = {Executing SPARQL Queries over the Web of Linked Data},
  year      = {2009},
  address   = {Berlin, Heidelberg},
  pages     = {293–309},
  publisher = {Springer-Verlag},
  series    = {ISWC '09},
  abstract  = {The Web of Linked Data forms a single, globally distributed dataspace. Due to the openness of this dataspace, it is not possible to know in advance all data sources that might be relevant for query answering. This openness poses a new challenge that is not addressed by traditional research on federated query processing. In this paper we present an approach to execute SPARQL queries over the Web of Linked Data. The main idea of our approach is to discover data that might be relevant for answering a query during the query execution itself. This discovery is driven by following RDF links between data sources based on URIs in the query and in partial results. The URIs are resolved over the HTTP protocol into RDF data which is continuously added to the queried dataset. This paper describes concepts and algorithms to implement our approach using an iterator-based pipeline. We introduce a formalization of the pipelining approach and show that classical iterators may cause blocking due to the latency of HTTP requests. To avoid blocking, we propose an extension of the iterator paradigm. The evaluation of our approach shows its strengths as well as the still existing challenges.},
  doi       = {10.1007/978-3-642-04930-9_19},
  file      = {:papers/Executing SPARQL Queries over the Web of Linked Data.pdf:PDF},
  groups    = {Link Traversal Query Processing, LTQP},
  isbn      = {9783642049293},
  location  = {Chantilly, VA},
  numpages  = {17},
  url       = {https://doi.org/10.1007/978-3-642-04930-9_19},
}

@InProceedings{Ladwig2010,
  author    = {Ladwig, G{\"u}nter and Tran, Thanh},
  booktitle = {The Semantic Web -- ISWC 2010},
  title     = {Linked Data Query Processing Strategies},
  year      = {2010},
  address   = {Berlin, Heidelberg},
  editor    = {Patel-Schneider, Peter F. and Pan, Yue and Hitzler, Pascal and Mika, Peter and Zhang, Lei and Pan, Jeff Z. and Horrocks, Ian and Glimm, Birte},
  pages     = {453--469},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {Recently, processing of queries on linked data has gained attention. We identify and systematically discuss three main strategies: a bottom-up strategy that discovers new sources during query processing by following links between sources, a top-down strategy that relies on complete knowledge about the sources to select and process relevant sources, and a mixed strategy that assumes some incomplete knowledge and discovers new sources at run-time. To exploit knowledge discovered at run-time, we propose an additional step, explicitly scheduled during query processing, called correct source ranking. Additionally, we propose the adoption of stream-based query processing to deal with the unpredictable nature of data access in the distributed Linked Data environment. In experiments, we show that our implementation of the mixed strategy leads to early reporting of results and thus, more responsive query processing, while not requiring complete knowledge.},
  file      = {:papers/Linked Data Query Processing Strategies.pdf:PDF},
  groups    = {Link Traversal Query Processing, query plan LTQP, query planning, LTQP},
  isbn      = {978-3-642-17746-0},
}

@InProceedings{Ladwig2011,
  author     = {Ladwig, G{\"u}nter and Tran, Thanh},
  booktitle  = {The Semantic Web: Research and Applications},
  title      = {SIHJoin: Querying Remote and Local Linked Data},
  year       = {2011},
  address    = {Berlin, Heidelberg},
  editor     = {Antoniou, Grigoris and Grobelnik, Marko and Simperl, Elena and Parsia, Bijan and Plexousakis, Dimitris and De Leenheer, Pieter and Pan, Jeff},
  pages      = {139--153},
  publisher  = {Springer Berlin Heidelberg},
  abstract   = {The amount of Linked Data is increasing steadily. Optimized top-down Linked Data query processing based on complete knowledge about all sources, bottom-up processing based on run-time discovery of sources as well as a mixed strategy that combines them have been proposed. A particular problem with Linked Data processing is that the heterogeneity of the sources and access options lead to varying input latency, rendering the application of blocking join operators infeasible. Previous work partially address this by proposing a non-blocking iterator-based operator and another one based on symmetric-hash join. Here, we propose detailed cost models for these two operators to systematically compare them, and to allow for query optimization. Further, we propose a novel operator called the Symmetric Index Hash Join to address one open problem of Linked Data query processing: to query not only remote, but also local Linked Data. We perform experiments on real-world datasets to compare our approach against the iterator-based baseline, and create a synthetic dataset to more systematically analyze the impacts of the individual components captured by the proposed cost models.},
  comment    = {Article très intéressant qui présente un bon modèle de cout pour des join ainsi que leur implmentation d'un nouvelle algorithm de join dont son coût ne dépend pas du nombre de source ce qui en LTQP est vraiment très bon. Par contre pour le calcul de sélectivité, je ne suis pas sur comment cela ce fait.},
  file       = {:papers/SIHJoin Querying Remote and Local Linked.pdf:PDF},
  groups     = {Link Traversal Query Processing, query plan LTQP, query planning, LTQP},
  isbn       = {978-3-642-21034-1},
  ranking    = {rank5},
  readstatus = {skimmed},
}

@InProceedings{Miranker2012,
  author     = {Miranker, Daniel and Depena, Rodolfo and Jung, Hyunjoon and Sequeda, Juan},
  title      = {Diamond: A SPARQL Query Engine, for Linked Data Based on the Rete Match},
  year       = {2012},
  month      = {08},
  comment    = {Don't think it is really useful for me},
  file       = {:papers/A SPARQL Query Engine for Linked Data.pdf:PDF},
  groups     = {Link Traversal Query Processing, LTQP},
  ranking    = {rank3},
  readstatus = {read},
}

@InProceedings{Wang2012,
  author     = {Wang, Xin and Tiropanis, Thanassis and Davis, Hugh C.},
  booktitle  = {The Semantic Web},
  title      = {Evaluating Graph Traversal Algorithms for Distributed SPARQL Query Optimization},
  year       = {2012},
  address    = {Berlin, Heidelberg},
  editor     = {Pan, Jeff Z. and Chen, Huajun and Kim, Hong-Gee and Li, Juanzi and Wu, Zhe and Horrocks, Ian and Mizoguchi, Riichiro and Wu, Zhaohui},
  pages      = {210--225},
  publisher  = {Springer Berlin Heidelberg},
  abstract   = {Distributed SPARQL queries enable users to retrieve information by exploiting the increasing amount of linked data being published. However, industrial-strength distributed SPARQL query processing is still at its early stage for efficiently answering queries. Previous research shows that it is possible to apply methods from graph theory to optimize the performance of distributed SPARQL. In this paper we describe a framework that can simulate arbitrary RDF data networks to evaluate different approaches of distributed SPARQL query processing. Using this framework we further explore the graph traversal algorithms for distributed SPARQL optimization. We present an implementation of a Minimum-Spanning-Tree-based (MST-based) algorithm for distributed SPARQL processing, the performance of which is compared to other approaches using this evaluation framework. The contribution of this paper is to show that a MST-based approach seems to perform much better than other non graph-traversal-based approaches, and to provide an evaluation framework for evaluating distributed SPARQL processing.},
  file       = {:papers/Evaluating Graph Traversal Algorithms for Distributed SPARQL Query Optimization.pdf:PDF},
  groups     = {Link Traversal Query Processing, LTQP},
  isbn       = {978-3-642-29923-0},
  ranking    = {rank1},
  readstatus = {skimmed},
}

@InProceedings{soton350719,
  author    = {Xin Wang and Thanassis Tiropanis and Hugh C. Davis},
  booktitle = {Linked Data on the Web (LDOW2013) (14/05/13 - 14/05/13)},
  title     = {LHD: optimising linked data query processing using parallelisation},
  year      = {2013},
  month     = {May},
  abstract  = {In the past few years as large volume of Linked Data is being publishing, processing distributed SPARQL queries over the Linked Data cloud is becoming increasingly challenging. The high data traffic cost and response time significantly affect the performance of distributed SPARQL queries as the number of SPARQL end point and the volume of data at each endpoint increase. In this context, parallelisation is promising to fully exploit the potential of connections to SPARQL endpoints and thus improve the efficiency of querying Linked Data. We propose LHD, a distributed SPARQL engine that is built on a highly parallel infrastructure and able to minimise query response time, and we evaluate its performance using a BSBM based environment.},
  file      = {:papers/LHD Optimising Linked Data Query Processing Using.pdf:PDF},
  groups    = {LTQP},
  keywords  = {sparql, linked data, distributed query processing},
  url       = {https://eprints.soton.ac.uk/350719/},
}

@Misc{Taelman2023,
  author     = {Taelman, Ruben and Verborgh, Ruben},
  title      = {Evaluation of Link Traversal Query Execution over Decentralized Environments with Structural Assumptions},
  year       = {2023},
  comment    = {Article très intéressant qui donne une bonne base pour mes expérience, de plus, il a beaucoup de référence qui peuvent m'être utile!},
  copyright  = {Creative Commons Attribution 4.0 International},
  doi        = {10.48550/ARXIV.2302.06933},
  file       = {:papers/Evaluation of Link Traversal ery Execution over Decentralized Environments with Structural Assumptions.pdf:PDF},
  groups     = {Link traversal, Link Traversal Query Processing, LTQP},
  keywords   = {Databases (cs.DB), FOS: Computer and information sciences, FOS: Computer and information sciences},
  publisher  = {arXiv},
  ranking    = {rank5},
  readstatus = {read},
  url        = {https://arxiv.org/abs/2302.06933},
}

@InProceedings{Verstraete2022,
  author    = {Verstraete, Melanie and Verbrugge, Sofie and Colle, Didier},
  booktitle = {31st ITS European Conference},
  title     = {Solid: Enabler of decentralized, digital platforms ecosystems},
  year      = {2022},
  pages     = {1--19},
  file      = {:article/Solid Enabler of decentralized, digital platforms ecosystems:},
  groups    = {Commodification internet, social impact},
  priority  = {prio1},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: grouping:
0 AllEntriesGroup:;
1 StaticGroup:LTQP\;0\;1\;0x8a8a8aff\;\;\;;
1 StaticGroup:social impact\;0\;1\;0x8a8a8aff\;\;\;;
}
